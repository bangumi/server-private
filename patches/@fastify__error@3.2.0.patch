diff --git a/types/index.d.ts b/types/index.d.ts
index 9591a93c1434adbf8f4611d5fc2dadc27cbe77df..f72dfa0e6131831cea7856ec43232dd6be2c170b 100644
--- a/types/index.d.ts
+++ b/types/index.d.ts
@@ -1,19 +1,59 @@
-declare function createError<C extends string, SC extends number>(code: C, message: string, statusCode: SC, Base?: Error): createError.FastifyErrorConstructor<{ code: C; statusCode: SC }>;
-declare function createError<C extends string>(code: C, message: string, statusCode?: number, Base?: Error): createError.FastifyErrorConstructor<{ code: C; }>;
+declare function createError<C extends string, SC extends number, Arg extends unknown[] = [any?, any?, any?]>(
+  code: C,
+  message: string,
+  statusCode: SC,
+  Base?: Error
+): createError.FastifyErrorConstructor<
+  {
+    code: C
+    statusCode: SC
+  },
+  Arg
+>
 
-type CreateError = typeof createError;
+declare function createError<C extends string, Arg extends unknown[] = [any?, any?, any?]>(
+  code: C,
+  message: string,
+  statusCode?: number,
+  Base?: Error
+): createError.FastifyErrorConstructor<
+  {
+    code: C
+  },
+  Arg
+>
+
+declare function createError<Arg extends unknown[] = [any?, any?, any?]>(
+  code: string,
+  message: string,
+  statusCode?: number,
+  Base?: Error
+): createError.FastifyErrorConstructor<
+  {
+    code: string
+  },
+  Arg
+>
+
+type CreateError = typeof createError
 
 declare namespace createError {
   export interface FastifyError extends Error {
-    code: string;
-    name: string;
-    statusCode?: number;
+    code: string
+    name: string
+    statusCode?: number
   }
 
-  export interface FastifyErrorConstructor<E extends { code: string; statusCode?: number } = { code: string; statusCode?: number }> {
-    new (a?: any, b?: any, c?: any): FastifyError & E;
-    (a?: any, b?: any, c?: any): FastifyError & E;
-    readonly prototype: FastifyError & E;
+  export interface FastifyErrorConstructor<
+    E extends { code: string; statusCode?: number } = {
+      code: string
+      statusCode?: number
+    },
+    T extends unknown[] = [any?, any?, any?]
+  > {
+    new(...arg: T): FastifyError & E
+    (...arg: T): FastifyError & E
+    readonly prototype: FastifyError & E
   }
 
   export const createError: CreateError