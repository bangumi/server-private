name: ci

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-js-env

      - run: npx prettier --check ./
      - run: npx tsc --noEmit --pretty
      - run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'bangumi/dev-env'
          path: 'dev-env'

      - run: mv dev-env $HOME/dev-env

      - run: cd ~/dev-env && docker-compose up -d

      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-js-env

      - run: bash $HOME/dev-env/wait_mysql_ready.sh

      - run: cd ~/dev-env && docker-compose logs redis

      - run: npm test -- --coverage
        timeout-minutes: 2
        env:
          REDIS_URI: 'redis://:redis-pass@127.0.0.1:6379/0'

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: |
          export "TAG_HASH=${DOCKER_FILE_HASH:0:10}-${PKG_FILE_HASH:0:10}"

          if ! docker pull "${IMAGE}:base-${TAG_HASH}"; then
            echo "build base docker image"
            docker build -t "${IMAGE}:base-${TAG_HASH}" -f etc/base.dockerfile .
          fi

          docker tag "${IMAGE}:base-${TAG_HASH}" base-image

        env:
          PKG_FILE_HASH: "${{ hashFiles('package.json', 'pnpm-lock.yaml') }}"
          DOCKER_FILE_HASH: "${{ hashFiles('etc/base.dockerfile') }}"
          IMAGE: 'ghcr.io/bangumi/private-server'

        name: build base docker image
      - run: docker build -t tmp -f etc/final.dockerfile .
      - run: docker run tmp --help
